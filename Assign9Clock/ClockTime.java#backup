
/**
 * Name: AUSTIN MOSER (moser)
 * Course: CSCI 241 - Computer Science I
 * Section: 001 <-- choose your section
 * Assignment: 1
 *
 * Project/Class Description:
 * (summarize ClockTime here)
 *
 * Known bugs:
 * (write the word none, or describe)
 */
public class ClockTime
{
    private int hour;
    private int minute;
    private int second;

    // Getter/Setters for hour:
    public void setHour(int hour){
        this.hour = hour;
    }

    public int getHour(){
        return hour;   
    }

    // Getter/Setters for minute:
    public void setMinute(int minute){
        this.minute = minute;
    }

    public int getMinute(){
        return minute;
    }

    // Getter/Setters for second:
    public void setSecond(int second){
        this.second = second;
    }    

    public int getSecond(){
        return second;
    }

    // Default Contstructor for ClockTime:
    public ClockTime(){
        // Sets all class attributes to 0.
        this.hour = 0;
        this.minute = 0;
        this.second = 0;
    }

    // Construtor with perameters:
    public ClockTime(int hour, int minute, int second){
        this.hour = hour;
        this.minute = minute;
        this.second = second;

        if (second > 59){
            // Caculates the seconds to minutes and adds it to minute.
            this.minute += (second / 60);

            // Gets the remaining seconds.
            this.second %= 60;
        }

        // Checks if second is negative. If so then it will equal 0.
        if(second < 0){
            this.second = 0;
        }

        if (minute > 59){
            // Calculates minutes to hours and adds it to hour.
            this.hour += (minute/60);

            // Gets the remaining minutes.
            this.minute %= 60;
        }

        // Checks if minute is negative. If so then it will equal 0.
        if(minute < 0){
            this.minute = 0;
        }

        if(hour > 24){
            // Gets the remaining hours if its over 24.
            this.hour %= 24;
        }
        // Checks if hour is negative. If so then it will equal 0.
        if(hour < 0){
            this.hour = 0;
        }
    }

    public String toString(){
        String h = String.format("%02d",this.hour);
        String m = String.format("%02d",this.minute);
        String s = String.format("%02d",this.second);

        return  h+ ":" +m + ":" + s;
    }

    public String toString12(){
        if(hour >= 12){
            this.hour %= 12;

            String h = String.format("%02d",this.hour);
            String m = String.format("%02d",this.minute);
            String s = String.format("%02d",this.second);

            return h + ":" + m + ":" + s + " P.M.";
        }

        String h = String.format("%02d",this.hour);
        String m = String.format("%02d",this.minute);
        String s = String.format("%02d",this.second);

        return h + ":" + m + ":" + s + " A.M.";
    }

    public void advance(int extraSeconds){
        this.second += extraSeconds;
        int minute=0;
                int minute=0;


        if (second > 59){
            // Caculates the seconds to minutes and adds it to minute.
            minute += (second / 60);

            // Gets the remaining seconds.
            this.second %= 60;
        }

        if (minute > 59){
            // Calculates minutes to hours and adds it to hour.
            this.hour += (minute/60);

            // Gets the remaining minutes.
            this.minute %= 60;
        }

        if(hour > 24){
            // Gets the remaining hours if its over 24.
            this.hour %= 24;
        }
    }

    public static boolean equals(ClockTime ClockTimeA){
        //if(ClockTime.equals(ClockTimeA)){
        //}
        return false;
    }
}